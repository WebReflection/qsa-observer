self.qsaObserver=function(e){"use strict";const t=e=>"querySelectorAll"in e,{filter:l}=[];return e.default=e=>{const r=new WeakMap,s=r=>{const{query:s}=e;if(s.length)for(let e=0,{length:a}=r;e<a;e++)o(l.call(r[e].addedNodes,t),!0,s),o(l.call(r[e].removedNodes,t),!1,s)},o=(t,l,s,n=new Set)=>{for(let c,d,h=0,{length:u}=t;h<u;h++)if(!n.has(d=t[h])){if(n.add(d),l)for(let t,o=a(d),n=0,{length:h}=s;n<h;n++)o.call(d,t=s[n])&&(r.has(d)||r.set(d,new Set),c=r.get(d),c.has(t)||(c.add(t),e.handle(d,l,t)));else r.has(d)&&(c=r.get(d),r.delete(d),c.forEach(t=>{e.handle(d,l,t)}));o(d.querySelectorAll(s),l,s,n)}},a=e=>e.matches||e.webkitMatchesSelector||e.msMatchesSelector,n=(t,l=!0)=>{o(t,l,e.query)},c=new MutationObserver(s),d=e.root||document,{query:h}=e;return c.observe(d,{childList:!0,subtree:!0}),h.length&&n(d.querySelectorAll(h)),{drop:e=>{for(let t=0,{length:l}=e;t<l;t++)r.delete(e[t])},flush:()=>{s(c.takeRecords())},observer:c,parse:n}},e}({}).default;
