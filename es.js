self.qsaObserver=function(e){"use strict";const t=e=>"querySelectorAll"in e,{filter:l}=[];return e.default=e=>{const r=new Set,s=new WeakMap,o=r=>{const{query:s}=e;if(s.length)for(let e=0,{length:o}=r;e<o;e++)a(l.call(r[e].addedNodes,t),!0,s),a(l.call(r[e].removedNodes,t),!1,s)},a=(t,l,o,c=new Set)=>{for(let d,h,u,f=0,{length:i}=t;f<i;f++)if(!c.has(u=t[f])){if(c.add(u),d=s.has(u),l)for(let t,a=d?s.get(u):r,c=n(u),h=0,{length:f}=o;h<f;h++)!a.has(t=o[h])&&c.call(u,t)&&(d||(d=!d,s.set(u,a=new Set)),a.add(t),e.handle(u,l,t));else d&&(h=s.get(u),s.delete(u),h.forEach(t=>{e.handle(u,l,t)}));a(u.querySelectorAll(o),l,o,c)}},n=e=>e.matches||e.webkitMatchesSelector||e.msMatchesSelector,c=(t,l=!0)=>{a(t,l,e.query)},d=new MutationObserver(o),h=e.root||document,{query:u}=e;return d.observe(h,{childList:!0,subtree:!0}),u.length&&c(h.querySelectorAll(u)),{drop:e=>{for(let t=0,{length:l}=e;t<l;t++)s.delete(e[t])},flush:()=>{o(d.takeRecords())},observer:d,parse:c}},e}({}).default;
