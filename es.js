self.qsaObserver=function(e){"use strict";const t=e=>"querySelectorAll"in e,{filter:r}=[];return e.default=e=>{const l=new WeakMap,s=l=>{const{query:s}=e;if(s.length)for(let e=0,{length:o}=l;e<o;e++)a(r.call(l[e].addedNodes,t),!0,s),a(r.call(l[e].removedNodes,t),!1,s)},a=(t,r,s,n=new Set)=>{for(let c,d,h=0,{length:u}=t;h<u;h++)if(!n.has(d=t[h])){if(n.add(d),r)for(let t,a=o(d),n=0,{length:h}=s;n<h;n++)a.call(d,t=s[n])&&(l.has(d)||l.set(d,new Set),c=l.get(d),c.has(t)||(c.add(t),e.handle(d,r,t)));else l.has(d)&&(c=l.get(d),l.delete(d),c.forEach(t=>{e.handle(d,r,c[h])}));a(d.querySelectorAll(s),r,s,n)}},o=e=>e.matches||e.webkitMatchesSelector||e.msMatchesSelector,n=(t,r=!0)=>{a(t,r,e.query)},c=new MutationObserver(s),d=e.root||document,{query:h}=e;return c.observe(d,{childList:!0,subtree:!0}),h.length&&n(d.querySelectorAll(h)),{flush:()=>{s(c.takeRecords())},observer:c,parse:n}},e}({}).default;
