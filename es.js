self.qsaObserver=function(e){"use strict";const{document:t,MutationObserver:l,Set:r,WeakMap:s}=self,a=e=>"querySelectorAll"in e,{filter:o}=[];return e.default=e=>{const n=new s,c=t=>{const{query:l}=e;if(l.length)for(let e=0,{length:r}=t;e<r;e++)d(o.call(t[e].addedNodes,a),!0,l),d(o.call(t[e].removedNodes,a),!1,l)},d=(t,l,s,a=new r)=>{for(let o,c,u=0,{length:i}=t;u<i;u++)if(!a.has(c=t[u])){if(a.add(c),l)for(let t,a=h(c),d=0,{length:u}=s;d<u;d++)a.call(c,t=s[d])&&(n.has(c)||n.set(c,new r),o=n.get(c),o.has(t)||(o.add(t),e.handle(c,l,t)));else n.has(c)&&(o=n.get(c),n.delete(c),o.forEach(t=>{e.handle(c,l,t)}));d(f(c),l,s,a)}},h=e=>e.matches||e.webkitMatchesSelector||e.msMatchesSelector,u=(t,l=!0)=>{d(t,l,e.query)},f=e=>b.length?e.querySelectorAll(b):b,i=new l(c),g=e.root||t,{query:b}=e;return i.observe(g,{childList:!0,subtree:!0}),u(f(g)),{drop:e=>{for(let t=0,{length:l}=e;t<l;t++)n.delete(e[t])},flush:()=>{c(i.takeRecords())},observer:i,parse:u}},e}({}).default;
